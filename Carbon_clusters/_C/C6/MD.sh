#!/bin/bash
########################################################################################################
#                                                                                                       ##                                            Environment Configuration                                  ##                                                                                                       ########################################################################################################### Set variablesTEMP_ENV_DIR=temp_dirCONDA_INSTALLER=Miniconda3-latest-Linux-x86_64.shCONDA_ENV_NAME=temp_envPYTHON_VERSION=3.11# Step 1: Create a temporary directory for the environmentecho "Creating temporary directory: $TEMP_ENV_DIR"mkdir $TEMP_ENV_DIRcd $TEMP_ENV_DIR# Step 2: Download Miniconda installerecho "Downloading Miniconda installer..."wget https://repo.anaconda.com/miniconda/$CONDA_INSTALLER# Step 3: Install Minicondaecho "Installing Miniconda..."bash $CONDA_INSTALLER -b -p $TEMP_ENV_DIR/miniconda# Step 4: Initialize Condaecho "Initializing Conda..."source $TEMP_ENV_DIR/miniconda/bin/activate# Step 5: Update Condaecho "Updating Conda..."conda update -y conda# Step 6: Create a Conda environment with Python 3.11echo "Creating Conda environment with Python $PYTHON_VERSION..."conda env create -f ../temp_env.yml# Step 7: Activate the new environmentecho "Activating the Conda environment..."conda activate $CONDA_ENV_NAME# Step 8: Confirmation and usageecho "Conda environment '$CONDA_ENV_NAME' with Python $PYTHON_VERSION and packages $PACKAGES is set up."echo "To activate this environment, run: source $TEMP_ENV_DIR/miniconda/bin/activate $CONDA_ENV_NAME"echo "To deactivate the environment, run: conda deactivate"##########################################################################################################                                                                                                       ##                                          LAMMPS CALCULATIONS                                          ##                                                                                                       ########################################################################################################################################################            Paramètres de calculs          ############################################### Dimension de la grande boite de simulationgmin=0      #A°gmax=100    #A°#Dimension de la petite boite de simulationpmin=40      #A°pmax=60      #A°# Paramètres de simulationstimestep=0.0001     # pstempchauff=3000     # KTdamp=0.001# Nombre d iterations iter=1000000000iterther=1000000# Export tous les iexports iterationsiexport=1000000iexportim=1000000#choix du seed des positions#for i in $(seq 1 1 100)do seed=$(sed -n $i"p" seed.txt)echo "Running simulation with seed: $seed"##############################################           Lancements des calculs          ##############################################export OMP_NUM_THREADS=2# Create a temporary directory for this simulationtempdir=$(mkdir -t cluster-XXXXXX)echo "Created temporary directory: $tempdir"# Set up the directory structuremkdir $tempdir/dump# Copy necessary input files to the temporary directorycp in.Carbon $tempdir/# Change to the temporary directorycd $tempdir# Run LAMMPSlmp -var iter $iter -var iterther $iterther -var iexport $iexport -var iexportim $iexportim -var timestep $timestep -var gmin $gmin -var gmax $gmax -var pmin $pmin -var pmax $pmax -var tempchauff $tempchauff -var Tdamp $Tdamp -var seed $seed < in.Carbon# Move results to a permanent locationresultdir=../cluster/$seed-$itermkdir $resultdirmv $tempdir/* $resultdir/# Clean up the temporary directory#rm -rf $tempdir# Return to the original directorycd -echo "Finished simulation with seed: $seed"# Optional: Clean up installerecho "Cleaning up installer..."#rm $CONDA_INSTALLER# Note: The environment will remain available until the temporary directory is deleted.# You can remove the environment manually by deleting the temporary directory: $TEMP_ENV_DIR# Example usage of LAMMPS (assuming you have a script named lammps_script.in):# lmp < lammps_script.in# Keep the script running to keep the environment active#echo "The temporary environment is ready. Keeping the shell open..."#$SHELL# Clean up temporary environment when the shell is closed (optional)echo "Cleaning up the temporary environment..."#rm -rf $TEMP_ENV_DIRdone
