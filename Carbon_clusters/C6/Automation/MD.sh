#!/bin/bash# Set variablesTEMP_ENV_DIR=$(mktemp -d)CONDA_ENV_NAME=temp_envPYTHON_VERSION=3.11PACKAGES=lammps numpy# Step 1: Create a temporary directory for the environmentecho "Creating temporary directory: $TEMP_ENV_DIR"cd $TEMP_ENV_DIR# Step 3: Set up Minicondaecho "Setting up Miniconda..."export root=C:\Users\dedea\git\.vscode\git\Miniconda3-py39_4.12.0-Windows-x86_64.sh$CONDA_INSTALLER -b -p $TEMP_ENV_DIR/miniconda# Step 4: Initialize Condaecho "Initializing Conda..."source $TEMP_ENV_DIR/miniconda/bin/activate# Step 5: Update Condaecho "Updating Conda..."conda update -y conda# Step 6: Create a Conda environment with Python 3.11echo "Creating Conda environment with Python $PYTHON_VERSION..."conda create -y -n $CONDA_ENV_NAME python=$PYTHON_VERSION# Step 7: Activate the new environmentecho "Activating the Conda environment..."conda activate $CONDA_ENV_NAME# Step 8: Install required packagesecho "Installing packages: $PACKAGES..."conda install -y $PACKAGES# Step 9: Confirmation and usageecho "Conda environment '$CONDA_ENV_NAME' with Python $PYTHON_VERSION and packages $PACKAGES is set up."echo "To activate this environment, run: source $TEMP_ENV_DIR/miniconda/bin/activate $CONDA_ENV_NAME"echo "To deactivate the environment, run: conda deactivate"# Optional: Clean up installerecho "Cleaning up installer..."#rm $CONDA_INSTALLER# Note: The environment will remain available until the temporary directory is deleted.# You can remove the environment manually by deleting the temporary directory: $TEMP_ENV_DIR# Example usage of LAMMPS (assuming you have a script named lammps_script.in):# lmp < lammps_script.in# Keep the script running to keep the environment active#echo "The temporary environment is ready. Keeping the shell open..."#$SHELL# Clean up temporary environment when the shell is closed (optional)echo "Cleaning up the temporary environment..."#rm -rf $TEMP_ENV_DIR